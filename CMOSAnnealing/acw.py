def print_spins(spins):
	print_string = ""
	y_prev = 0
	for exec_index, spin in enumerate(spins):
		#print("{0}回目の実行時のスピン".format(exec_index + 1))
		print_string += "\n\n{0}回目の実行時のスピン\n".format(exec_index + 1)
		for x,y,p in spin:
			if y != y_prev:
				print_string += "\n"
			#print("({0}, {1}) = {2}".format(x, y, p))
			print_string += "{0:>5}".format(p)

			y_prev = y

	print(print_string)
	return

def setClusteringSample():
	# constant value for constraint
	C = 6

	# set magnetic field
	model_mag = [
		# sigma 1a
		[0,6,0,6,1],
		[1,5,1,5,1],
		[2,4,2,4,1],
		[3,3,3,3,1],
		[4,2,4,2,1],
		[5,1,5,1,1],
		[6,0,6,0,1],
		# sigma 1b
		[0,7,0,7,1],
		[1,8,1,8,1],
		[2,9,2,9,1],
		[3,10,3,10,1],
		[4,11,4,11,1],
		[5,12,5,12,1],
		[6,13,6,13,1],
		# sigma 2a
		[1,7,1,7,1],
		[2,6,2,6,1],
		[3,5,3,5,1],
		[4,4,4,4,1],
		[5,3,5,3,1],
		[6,2,6,2,1],
		[6,1,6,1,1],
		# sigma 2b
		[1,6,1,6,1],
		[2,7,2,7,1],
		[3,8,3,8,1],
		[4,9,4,9,1],
		[5,10,5,10,1],
		[6,11,6,11,1],
		[6,12,6,12,1],
		# sigma 3a
		[2,8,2,8,1],
		[3,7,3,7,1],
		[4,6,4,6,1],
		[5,5,5,5,1],
		[6,4,6,4,1],
		[6,3,6,3,1],
		[5,2,5,2,1],
		# sigma 3b
		[2,5,2,5,1],
		[3,6,3,6,1],
		[4,7,4,7,1],
		[5,8,5,8,1],
		[6,9,6,9,1],
		[6,10,6,10,1],
		[5,11,5,11,1],
		# sigma 4a
		[3,9,3,9,1],
		[4,8,4,8,1],
		[5,7,5,7,1],
		[6,6,6,6,1],
		[6,5,6,5,1],
		[5,4,5,4,1],
		[4,3,4,3,1],
		# sigma 4b
		[3,4,3,4,1],
		[4,5,4,5,1],
		[5,6,5,6,1],
		[6,7,6,7,1],
		[6,8,6,8,1],
		[5,9,5,9,1],
		[4,10,4,10,1],
	]
	# set interaction
	model_int = [
		# sigma 1a
		[0,6,1,5,-3],
		[1,5,2,4,-3],
		[2,4,3,3,-3],
		[3,3,4,2,-3],
		[4,2,5,1,-3],
		[5,1,6,0,-3],
		# sigma 1b
		[0,7,1,8,-3],
		[1,8,2,9,-3],
		[2,9,3,10,-3],
		[3,10,4,11,-3],
		[4,11,5,12,-3],
		[5,12,6,13,-3],
		# sigma 2a
		[1,7,2,6,-3],
		[2,6,3,5,-3],
		[3,5,4,4,-3],
		[4,4,5,3,-3],
		[5,3,6,2,-3],
		[6,2,6,1,-3],
		# sigma 2b
		[1,6,2,7,-3],
		[2,7,3,8,-3],
		[3,8,4,9,-3],
		[4,9,5,10,-3],
		[5,10,6,11,-3],
		[6,11,6,12,-3],
		# sigma 3a
		[2,8,3,7,-3],
		[3,7,4,6,-3],
		[4,6,5,5,-3],
		[5,5,6,4,-3],
		[6,4,6,3,-3],
		[6,3,5,2,-3],
		# sigma 3b
		[2,5,3,6,-3],
		[3,6,4,7,-3],
		[4,7,5,8,-3],
		[5,8,6,9,-3],
		[6,9,6,10,-3],
		[6,10,5,11,-3],
		# sigma 4a
		[3,9,4,8,-3],
		[4,8,5,7,-3],
		[5,7,6,6,-3],
		[6,6,6,5,-3],
		[6,5,5,4,-3],
		[5,4,4,3,-3],
		# sigma 4b
		[3,4,4,5,-3],
		[4,5,5,6,-3],
		[5,6,6,7,-3],
		[6,7,7,8,-3],
		[6,8,5,9,-3],
		[5,9,4,10,-3],
		# distance=1
		[6,0,6,1,1],
		[6,2,6,3,1],
		[6,4,6,5,1],
		[6,8,6,9,1],
		[6,10,6,11,1],
		[6,12,6,13,1],
		# distance=2
		[5,1,5,2,2],
		[5,3,5,4,2],
		[5,9,5,10,2],
		[5,11,5,12,2],
		# distance=3
		[4,2,4,3,3],
		[4,10,4,11,3],
		# constraint
		[0,6,0,7,C],
		[1,6,1,7,C],
		[3,6,3,7,C],
		[5,6,5,7,C],
	]

	model = model_mag + model_int

	return model




